{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/myoungsun/Desktop/Nomad/nwitter/src/routes/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\n\nconst Home = () => {\n  _s();\n\n  const [nweet, setNweet] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n\n  const getNweets = async () => {\n    const dbnweets = await dbService.collection(\"nweets\").get();\n    dbNweets.forEach(document => {\n      setNweets(prev => [document.data(), ...prev]); //새로 작성한 트윗과 그 이전의 것\n      //set이 붙을때 함수전달 가능 , 만약 함수가 전달되면 리액트는 이전 값에 접근할 수 있게 함\n    });\n  }; //컴포넌트가 mount될 때, 우리는 getNweets 실행\n  //getNweets는 dbService 불러옴\n  //collection. nweets를 get써서 가져옴\n\n\n  useEffect(() => {\n    getNweets();\n  }, []);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    await dbService.collection(\"nweets\").add({\n      nweet,\n      createAt: Date.now()\n    });\n    setNweets(\"\");\n  };\n\n  const onChange = e => {\n    const {\n      target: {\n        value\n      }\n    } = e;\n    setNweet(value);\n  };\n\n  console.log(nweets);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"input your insprit\",\n        maxLength: 120,\n        value: nweet,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Nweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Home, \"IALbbgkikD84dCoZ0+ewUlggGfA=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/myoungsun/Desktop/Nomad/nwitter/src/routes/Home.js"],"names":["React","useEffect","useState","dbService","Home","nweet","setNweet","nweets","setNweets","getNweets","dbnweets","collection","get","dbNweets","forEach","document","prev","data","onSubmit","e","preventDefault","add","createAt","Date","now","onChange","target","value","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,OAA1B;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMO,SAAS,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAG,MAAMP,SAAS,CAACQ,UAAV,CAAqB,QAArB,EAA+BC,GAA/B,EAAvB;AACAC,IAAAA,QAAQ,CAACC,OAAT,CAAkBC,QAAD,IAAc;AAC7BP,MAAAA,SAAS,CAAEQ,IAAD,IAAU,CAACD,QAAQ,CAACE,IAAT,EAAD,EAAkB,GAAGD,IAArB,CAAX,CAAT,CAD6B,CAE7B;AACA;AACD,KAJD;AAKD,GAPD,CAHiB,CAYjB;AACA;AACA;;;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMS,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMjB,SAAS,CAACQ,UAAV,CAAqB,QAArB,EAA+BU,GAA/B,CAAmC;AACvChB,MAAAA,KADuC;AAEvCiB,MAAAA,QAAQ,EAAEC,IAAI,CAACC,GAAL;AAF6B,KAAnC,CAAN;AAIAhB,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAPD;;AASA,QAAMiB,QAAQ,GAAIN,CAAD,IAAO;AACtB,UAAM;AACJO,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADJ,QAEFR,CAFJ;AAGAb,IAAAA,QAAQ,CAACqB,KAAD,CAAR;AACD,GALD;;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYtB,MAAZ;AACA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEW,QAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,oBAFd;AAGE,QAAA,SAAS,EAAE,GAHb;AAIE,QAAA,KAAK,EAAEb,KAJT;AAKE,QAAA,QAAQ,EAAEoB;AALZ;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD,CAnDD;;GAAMrB,I;;KAAAA,I;AAoDN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nconst Home = () => {\n  const [nweet, setNweet] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n  const getNweets = async () => {\n    const dbnweets = await dbService.collection(\"nweets\").get();\n    dbNweets.forEach((document) => {\n      setNweets((prev) => [document.data(), ...prev]);\n      //새로 작성한 트윗과 그 이전의 것\n      //set이 붙을때 함수전달 가능 , 만약 함수가 전달되면 리액트는 이전 값에 접근할 수 있게 함\n    });\n  };\n\n  //컴포넌트가 mount될 때, 우리는 getNweets 실행\n  //getNweets는 dbService 불러옴\n  //collection. nweets를 get써서 가져옴\n\n  useEffect(() => {\n    getNweets();\n  }, []);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    await dbService.collection(\"nweets\").add({\n      nweet,\n      createAt: Date.now(),\n    });\n    setNweets(\"\");\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNweet(value);\n  };\n\n  console.log(nweets);\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"input your insprit\"\n          maxLength={120}\n          value={nweet}\n          onChange={onChange}\n        ></input>\n        <input type=\"submit\" value=\"Nweet\"></input>\n      </form>\n    </>\n  );\n};\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}