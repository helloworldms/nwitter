{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/myoungsun/Desktop/Nomad/nwitter/src/routes/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Home = ({\n  userObj\n}) => {\n  _s();\n\n  const [nweet, setNweet] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n  const [attachment, setAttachment] = useState();\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot(snapshot => {\n      const nweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n    const response = await fileRef.putString(attachment, \"data_url\");\n    console.log(response);\n    setNweet(\"\"); //child는 기본적으로 이미지와 path\n    //uuid는 기본적으로 어떤 특별한 식별자를 랜더으로 생성\n    //파일에 대한 reference를 만들고 난 후 파일을 몇몇 내용과 함꼐 업데이트\n    //모든 유저의 사진은 아이디와 분리되어 있음\n    //사진에는 이름을 줘야하고 랜듬으로 주기 위해 uuid사용\n    // await dbService.collection(\"nweets\").add({\n    //   text: nweet,\n    //   createdAt: Date.now(),\n    //   creatorId: userObj.uid,\n    // });\n    // setNweet(\"\");\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = event => {\n    const {\n      target: {\n        files\n      }\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = finishedEvent => {\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent;\n      setAttachment(result);\n    };\n\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(null);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: nweet,\n        onChange: onChange,\n        type: \"text\",\n        placeholder: \"What's on your mind?\",\n        maxLength: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: onFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Nweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), attachment && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: attachment,\n          width: \"50px\",\n          height: \"50px\",\n          alt: \"filexs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClearAttachment,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: nweets.map(nweet => /*#__PURE__*/_jsxDEV(Nweet, {\n        nweetObj: nweet,\n        isOwner: nweet.creatorId === userObj.uid\n      }, nweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"js3UJwMu14bRxU9xKfPV+RqjXCw=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/myoungsun/Desktop/Nomad/nwitter/src/routes/Home.js"],"names":["React","useState","useEffect","dbService","storageService","Nweet","v4","uuidv4","Home","userObj","nweet","setNweet","nweets","setNweets","attachment","setAttachment","collection","onSnapshot","snapshot","nweetArray","docs","map","doc","id","data","onSubmit","event","preventDefault","fileRef","ref","child","uid","response","putString","console","log","onChange","target","value","onFileChange","files","theFile","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","onClearAttachment","creatorId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Home = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n  const [attachment, setAttachment] = useState();\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n    const response = await fileRef.putString(attachment, \"data_url\");\n    console.log(response);\n    setNweet(\"\");\n    //child는 기본적으로 이미지와 path\n    //uuid는 기본적으로 어떤 특별한 식별자를 랜더으로 생성\n    //파일에 대한 reference를 만들고 난 후 파일을 몇몇 내용과 함꼐 업데이트\n    //모든 유저의 사진은 아이디와 분리되어 있음\n    //사진에는 이름을 줘야하고 랜듬으로 주기 위해 uuid사용\n\n    // await dbService.collection(\"nweets\").add({\n    //   text: nweet,\n    //   createdAt: Date.now(),\n    //   creatorId: userObj.uid,\n    // });\n    // setNweet(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(null);\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange}></input>\n        <input type=\"submit\" value=\"Nweet\" />\n        {attachment && (\n          <div>\n            <img src={attachment} width=\"50px\" height=\"50px\" alt=\"filexs\" />\n            <button onClick={onClearAttachment}>Clear</button>\n          </div>\n        )}\n      </form>\n      <div>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          ></Nweet>\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}